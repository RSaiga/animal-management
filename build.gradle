buildscript {
    ext {
        springBootVersion = '2.1.1.RELEASE'
    }
    repositories {
        mavenCentral()
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        classpath "com.moowork.gradle:gradle-node-plugin:1.2.0"
    }
}

apply plugin: 'java'
apply plugin: 'war'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'com.moowork.node'
apply plugin: 'groovy'

group = 'com.lib.training'
//version = '0.0.1-SNAPSHOT'
sourceCompatibility = 1.8
targetCompatibility = 1.8
[compileJava, compileTestJava]*.options*.encoding = 'UTF-8'

processResources.destinationDir = compileJava.destinationDir
compileJava.dependsOn processResources
def appVersion = '1.0.'
def appTstamp = java.time.LocalDateTime.now().format(java.time.format.DateTimeFormatter.ofPattern('yyMMddHHmm'))
ant.echo(message: 'echo version: ' + appVersion + appTstamp)
ant.echo(message: appVersion + appTstamp, file: new File('src/main/resources/version'))

ext.profile = 'dev'
ext.logfilename = 'animal-management'

if (hasProperty('env')) {
    if ("${env}".contains('prod')) {
        ext.profile = 'prod'
    }
}

processResources {
    filesMatching('**/application.yml') {
        expand(project.properties)
    }
    filesMatching('**/logback.xml') {
        expand(project.properties)
    }
}

node {
    version = '8.11.1' //使用するnodeのバージョン
    npmVersion='5.6.0'
    download = true //各自の環境にダウンロードする
//	workDir = file('src/main/resources/static') // nodejsインストールディレクトリを指定
    nodeModulesDir = file('src/main/resources/static') // package.jsonがあるディレクトリの位置を指定
}
task npmBuild(type: NpmTask) {
    args = ['run', 'build']
}
processResources.dependsOn npmBuild

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
    implementation 'org.springframework.boot:spring-boot-starter-hateoas'
    implementation 'org.springframework.boot:spring-boot-starter-validation'

    implementation 'org.springframework.boot:spring-boot-starter-web'
    providedRuntime 'org.springframework.boot:spring-boot-starter-tomcat'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.spockframework:spock-core:1.2-groovy-2.4'
    testImplementation 'org.spockframework:spock-spring:1.2-groovy-2.4'
}
